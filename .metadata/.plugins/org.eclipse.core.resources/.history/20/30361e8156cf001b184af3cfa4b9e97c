package view;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Scanner;

import model.Pianeta;

public class Vista {

	public Date leggiData(String suggerimento){
		String sData=""; 
		Date data = null;
		boolean flag = true;
		do {
			flag = false;
			sData = leggiStringa(suggerimento +"(dd/MM/yyyy):"); 
			try {

				data = new SimpleDateFormat("dd/MM/yyyy").parse(sData);
			} catch (ParseException e) {
				System.out.println("Formato data non valido.");
				flag = true;
			}
		}while(flag);
		return data;
	}

	Scanner input = new Scanner(System.in);
	public String leggiStringa(String messaggio) {
		System.out.println(messaggio);
		return input.nextLine();
	}
	public int leggiIntero(String stringa) {
		boolean flagInt;
		int leggiIntero = 0;
		do {
			flagInt = false;
			try {
				System.out.println(stringa);
				leggiIntero = Integer.parseInt(input.nextLine());
			}catch(NumberFormatException e) {
				System.out.println("Inserire un valore numerico");
				flagInt = true;
			}
		}while(flagInt);
		return leggiIntero;
	}
	public double leggiDouble(String stringa) {
		boolean flagDouble;
		double leggiDouble = 0;
		do {
			flagDouble = false;
			try {
				System.out.println(stringa);
				leggiDouble = Double.parseDouble(input.nextLine());
			}catch(NumberFormatException e) {
				System.out.println("Inserire un valore numerico");
				flagDouble = true;
			}
		}while(flagDouble);
		return leggiDouble;
	}
	public boolean leggiBoolean(String stringa) {
		String s = leggiStringa(stringa);
		boolean flag = false;
		if(s.equalsIgnoreCase("si"))
			flag = true;
		else if (s.equalsIgnoreCase("no")){
			flag = false;
		}
		else {
			System.out.println("Inserire si o no");
		}

		return flag;
	}

	public Pianeta inserisci() {
		Pianeta p = new Pianeta(leggiIntero("Inserisci id: "),leggiStringa("Inserisci nome: "),leggiDouble("Inserisci massa: "), 
				leggiBoolean("Abitato? si/no"), leggiStringa("Inserisci colore:"),leggiDouble("Inserisci temperatura"),
				leggiData("Inserisci data scoperta"));
		return p;
	}
	public void modifica(Pianeta p) {
		System.out.println("Id [" + p.getId()+ "]");
		p.setId(leggiIntero("Inserisci id"));

		System.out.println("Nome [" + p.getNome()+ "]");
		p.setNome(leggiStringa("Inserisci nome: "));

		System.out.println("Massa [" + p.getMassa()+ "]");
		p.setMassa(leggiDouble("Inserisci massa: "));

		System.out.println("Abitato [" + p.isAbitato()+ "]");
		p.setAbitato(leggiBoolean("Abitato? si/no: "));

		System.out.println("Colore [" + p.getColore()+ "]");
		p.setColore(leggiStringa("Inserisci colore: "));

		System.out.println("Temperatura [" + p.getTemperatura() + "]");
		p.setTemperatura(leggiDouble("Inserisci temperatura: "));

		System.out.println("Data di scoperta [" + p.getDataScoperta()+ "]");
		p.setDataScoperta(leggiData("Inserisci data di scoperta: "));
	}
	public void cancella(ArrayList<Pianeta> p) {
		p.remove(leggiIntero("Inserisci l'id del pianeta da rimuovere"));
	}
	public void stampaScheda(ArrayList<Pianeta> p) {
		for (Pianeta pianeta : p) {
			System.out.println("Id: " + pianeta.getId());
			System.out.println("Nome: " + pianeta.getNome());
			System.out.println("Massa: " + pianeta.getMassa());
			System.out.println("Abitato: " + pianeta.isAbitato());
			System.out.println("Colore: " + pianeta.getColore());
			System.out.println("Temperatura: " + pianeta.getTemperatura());
			System.out.println("Data di Scoperta: " + pianeta.getDataScoperta());
		}
	}
}
